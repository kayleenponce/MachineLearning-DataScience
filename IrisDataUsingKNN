{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2A \n",
    "-Read the iris flower dataset from the following URL: https://raw.githubusercontent.com/mpourhoma/CS4661/master/iris.csv (Links to an external site.)\n",
    "-Assign it to a Pandas DataFrame "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     sepal_length  sepal_width  petal_length  petal_width    species\n",
      "0             5.1          3.5           1.4          0.2     setosa\n",
      "1             4.9          3.0           1.4          0.2     setosa\n",
      "2             4.7          3.2           1.3          0.2     setosa\n",
      "3             4.6          3.1           1.5          0.2     setosa\n",
      "4             5.0          3.6           1.4          0.2     setosa\n",
      "..            ...          ...           ...          ...        ...\n",
      "145           6.7          3.0           5.2          2.3  virginica\n",
      "146           6.3          2.5           5.0          1.9  virginica\n",
      "147           6.5          3.0           5.2          2.0  virginica\n",
      "148           6.2          3.4           5.4          2.3  virginica\n",
      "149           5.9          3.0           5.1          1.8  virginica\n",
      "\n",
      "[150 rows x 5 columns]\n"
     ]
    }
   ],
   "source": [
    "#import needed libraries\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "#read csv file\n",
    "iris_df = pd.read_csv('https://raw.githubusercontent.com/mpourhoma/CS4661/master/iris.csv')\n",
    "\n",
    "print(iris_df)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2B\n",
    "-Split the dataset into testing and training sets with the following parameters: test_size=0.4, random_state=6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(90, 4)\n",
      "(90,)\n",
      "(60, 4)\n",
      "(60,)\n",
      "     sepal_length  sepal_width  petal_length  petal_width\n",
      "4             5.0          3.6           1.4          0.2\n",
      "116           6.5          3.0           5.5          1.8\n",
      "2             4.7          3.2           1.3          0.2\n",
      "23            5.1          3.3           1.7          0.5\n",
      "123           6.3          2.7           4.9          1.8\n",
      "96            5.7          2.9           4.2          1.3\n",
      "134           6.1          2.6           5.6          1.4\n",
      "39            5.1          3.4           1.5          0.2\n",
      "137           6.4          3.1           5.5          1.8\n",
      "53            5.5          2.3           4.0          1.3\n",
      "127           6.1          3.0           4.9          1.8\n",
      "81            5.5          2.4           3.7          1.0\n",
      "115           6.4          3.2           5.3          2.3\n",
      "135           7.7          3.0           6.1          2.3\n",
      "74            6.4          2.9           4.3          1.3\n",
      "119           6.0          2.2           5.0          1.5\n",
      "105           7.6          3.0           6.6          2.1\n",
      "51            6.4          3.2           4.5          1.5\n",
      "92            5.8          2.6           4.0          1.2\n",
      "32            5.2          4.1           1.5          0.1\n",
      "37            4.9          3.1           1.5          0.1\n",
      "120           6.9          3.2           5.7          2.3\n",
      "44            5.1          3.8           1.9          0.4\n",
      "0             5.1          3.5           1.4          0.2\n",
      "55            5.7          2.8           4.5          1.3\n",
      "72            6.3          2.5           4.9          1.5\n",
      "87            6.3          2.3           4.4          1.3\n",
      "102           7.1          3.0           5.9          2.1\n",
      "30            4.8          3.1           1.6          0.2\n",
      "93            5.0          2.3           3.3          1.0\n",
      "45            4.8          3.0           1.4          0.3\n",
      "59            5.2          2.7           3.9          1.4\n",
      "16            5.4          3.9           1.3          0.4\n",
      "13            4.3          3.0           1.1          0.1\n",
      "133           6.3          2.8           5.1          1.5\n",
      "128           6.4          2.8           5.6          2.1\n",
      "64            5.6          2.9           3.6          1.3\n",
      "146           6.3          2.5           5.0          1.9\n",
      "95            5.7          3.0           4.2          1.2\n",
      "49            5.0          3.3           1.4          0.2\n",
      "17            5.1          3.5           1.4          0.3\n",
      "103           6.3          2.9           5.6          1.8\n",
      "71            6.1          2.8           4.0          1.3\n",
      "61            5.9          3.0           4.2          1.5\n",
      "46            5.1          3.8           1.6          0.2\n",
      "12            4.8          3.0           1.4          0.1\n",
      "52            6.9          3.1           4.9          1.5\n",
      "27            5.2          3.5           1.5          0.2\n",
      "34            4.9          3.1           1.5          0.1\n",
      "54            6.5          2.8           4.6          1.5\n",
      "118           7.7          2.6           6.9          2.3\n",
      "117           7.7          3.8           6.7          2.2\n",
      "121           5.6          2.8           4.9          2.0\n",
      "6             4.6          3.4           1.4          0.3\n",
      "111           6.4          2.7           5.3          1.9\n",
      "18            5.7          3.8           1.7          0.3\n",
      "38            4.4          3.0           1.3          0.2\n",
      "20            5.4          3.4           1.7          0.2\n",
      "58            6.6          2.9           4.6          1.3\n",
      "108           6.7          2.5           5.8          1.8\n",
      "\n",
      "\n",
      "\n",
      "4          setosa\n",
      "116     virginica\n",
      "2          setosa\n",
      "23         setosa\n",
      "123     virginica\n",
      "96     versicolor\n",
      "134     virginica\n",
      "39         setosa\n",
      "137     virginica\n",
      "53     versicolor\n",
      "127     virginica\n",
      "81     versicolor\n",
      "115     virginica\n",
      "135     virginica\n",
      "74     versicolor\n",
      "119     virginica\n",
      "105     virginica\n",
      "51     versicolor\n",
      "92     versicolor\n",
      "32         setosa\n",
      "37         setosa\n",
      "120     virginica\n",
      "44         setosa\n",
      "0          setosa\n",
      "55     versicolor\n",
      "72     versicolor\n",
      "87     versicolor\n",
      "102     virginica\n",
      "30         setosa\n",
      "93     versicolor\n",
      "45         setosa\n",
      "59     versicolor\n",
      "16         setosa\n",
      "13         setosa\n",
      "133     virginica\n",
      "128     virginica\n",
      "64     versicolor\n",
      "146     virginica\n",
      "95     versicolor\n",
      "49         setosa\n",
      "17         setosa\n",
      "103     virginica\n",
      "71     versicolor\n",
      "61     versicolor\n",
      "46         setosa\n",
      "12         setosa\n",
      "52     versicolor\n",
      "27         setosa\n",
      "34         setosa\n",
      "54     versicolor\n",
      "118     virginica\n",
      "117     virginica\n",
      "121     virginica\n",
      "6          setosa\n",
      "111     virginica\n",
      "18         setosa\n",
      "38         setosa\n",
      "20         setosa\n",
      "58     versicolor\n",
      "108     virginica\n",
      "Name: species, dtype: object\n"
     ]
    }
   ],
   "source": [
    "#Splitting the Original Dataset into training set and testing set\n",
    "from sklearn.model_selection import train_test_split\n",
    "\n",
    "#Create list of feature names \n",
    "feature_cols = ['sepal_length','sepal_width','petal_length','petal_width']\n",
    "\n",
    "#Use list to select the features wanted\n",
    "X = iris_df[feature_cols]\n",
    "\n",
    "#Use list to select a series of labels\n",
    "y = iris_df['species']\n",
    "\n",
    "# test_size=0.4, random_state=6\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "\n",
    "# print the size of the traning set:\n",
    "print(X_train.shape)\n",
    "print(y_train.shape)\n",
    "\n",
    "# print the size of the testing set:\n",
    "print(X_test.shape)\n",
    "print(y_test.shape)\n",
    "\n",
    "#printing the whole test\n",
    "print(X_test)\n",
    "print('\\n\\n')\n",
    "print(y_test)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2C\n",
    "-Instantiate a KNN object with K=3, train it on the training set and test it on the testing set. \n",
    "-calculate the accuracy of your prediction"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "0.9666666666666667\n",
      "0.9666666666666667\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n"
     ]
    }
   ],
   "source": [
    "#import KNeighborClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "\n",
    "#import \"accuracy_score\"\n",
    "from sklearn.metrics import accuracy_score\n",
    "\n",
    "#Instantiating another object with k=3\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "\n",
    "#method \"fit\" of the \"object knn\" along with training dataset and labels to train the model\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "#We can use the method \"predict\" of the *trained* object knn on one or more testing data sample to perform prediction:\n",
    "y_predict = knn.predict(X_test)\n",
    "\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "#Printing Accuracy Evaluation\n",
    "score = accuracy_score(y_test, y_predict)\n",
    "print(score)\n",
    "\n",
    "accuracy = accuracy_score(y_test, y_predict)\n",
    "print(accuracy)\n",
    "print('\\n')\n",
    "\n",
    "#Checking Results\n",
    "results = pd.DataFrame()\n",
    "\n",
    "results['actual'] = y_test \n",
    "results['prediction'] = y_predict \n",
    "\n",
    "print(results)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2D:\n",
    "Repeat part (c) for K=1, K=5, K=7, K=11, K=15, K=27, K=59 (you can simply use a “for loop,” and save the final accuracy results in a list). Does the accuracy always get better by increasing the value K?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica  versicolor\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 1 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'versicolor'\n",
      " 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor' 'setosa'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica   virginica\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 5 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'versicolor'\n",
      " 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor' 'setosa'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica   virginica\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 7 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'versicolor'\n",
      " 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor' 'setosa'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica   virginica\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 11 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'versicolor' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica  versicolor\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 15 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'versicolor' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'versicolor' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica  versicolor\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica  versicolor\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 27 Prediction ^^----\n",
      "\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'versicolor' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'setosa' 'virginica' 'setosa'\n",
      " 'setosa' 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa'\n",
      " 'versicolor' 'setosa' 'versicolor' 'versicolor' 'setosa' 'versicolor'\n",
      " 'virginica' 'versicolor' 'versicolor' 'versicolor' 'setosa' 'setosa'\n",
      " 'virginica' 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'setosa' 'virginica' 'versicolor' 'setosa' 'versicolor' 'versicolor'\n",
      " 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica  versicolor\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa  versicolor\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa  versicolor\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica  versicolor\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor   virginica\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica  versicolor\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa  versicolor\n",
      "38       setosa      setosa\n",
      "20       setosa  versicolor\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "\n",
      "---^^ K = 59 Prediction ^^----\n",
      "\n",
      "The Accuracy does NOT always get better when K increases\n"
     ]
    }
   ],
   "source": [
    "#--------------- K = 1 --------------------\n",
    "k = 1\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 1 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 5 --------------------\n",
    "k = 5\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 5 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 7 --------------------\n",
    "k = 7\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 7 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 11 --------------------\n",
    "k = 11\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 11 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 15 --------------------\n",
    "k = 15\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 15 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 27 --------------------\n",
    "k = 27\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 27 Prediction ^^----\\n\\n')\n",
    "\n",
    "#--------------- K = 59 --------------------\n",
    "k = 59\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "print(results)\n",
    "print('\\n---^^ K = 59 Prediction ^^----\\n')\n",
    "\n",
    "print('The Accuracy does NOT always get better when K increases')\n",
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2E: Now, suppose that we would like to make prediction based on only ONE single feature. To find the best single feature, we have to try every feature individually. In other word, we have to repeat part (c) with K=3, four times (each time using only one of the 4 features), and compute the accuracy each time. Then, check the accuracies. \n",
    "Which individual feature provide the best accuracy (the best feature)?  Which one is the second best feature? (Note: you have to train, test, and evaluate your model 4 times, each time on a dataset including only one of the features, and save the final accuracy results in a list)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor' 'virginica'\n",
      " 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'setosa' 'virginica'\n",
      " 'virginica' 'virginica' 'setosa' 'setosa' 'setosa' 'setosa' 'setosa'\n",
      " 'setosa' 'virginica' 'virginica' 'versicolor' 'virginica' 'setosa'\n",
      " 'setosa' 'setosa' 'virginica' 'versicolor' 'virginica' 'setosa' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'virginica' 'virginica' 'virginica'\n",
      " 'versicolor' 'setosa' 'virginica' 'setosa' 'setosa' 'setosa' 'virginica'\n",
      " 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor      setosa\n",
      "134   virginica  versicolor\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica  versicolor\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor   virginica\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor   virginica\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor      setosa\n",
      "72   versicolor   virginica\n",
      "87   versicolor   virginica\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor      setosa\n",
      "45       setosa      setosa\n",
      "59   versicolor      setosa\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica   virginica\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor      setosa\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor   virginica\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor   virginica\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor   virginica\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica  versicolor\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor   virginica\n",
      "108   virginica   virginica\n",
      "------------^^ Sepal Length ^^-----------------------\n",
      "\n",
      "['setosa' 'virginica' 'virginica' 'virginica' 'versicolor' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica' 'virginica'\n",
      " 'versicolor' 'setosa' 'virginica' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'virginica' 'setosa'\n",
      " 'versicolor' 'versicolor' 'virginica' 'setosa' 'virginica' 'virginica'\n",
      " 'setosa' 'virginica' 'versicolor' 'versicolor' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'virginica' 'setosa' 'versicolor'\n",
      " 'versicolor']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa   virginica\n",
      "23       setosa   virginica\n",
      "123   virginica  versicolor\n",
      "96   versicolor  versicolor\n",
      "134   virginica  versicolor\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor   virginica\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa   virginica\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa   virginica\n",
      "93   versicolor  versicolor\n",
      "45       setosa   virginica\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa   virginica\n",
      "133   virginica  versicolor\n",
      "128   virginica  versicolor\n",
      "64   versicolor  versicolor\n",
      "146   virginica  versicolor\n",
      "95   versicolor   virginica\n",
      "49       setosa   virginica\n",
      "17       setosa      setosa\n",
      "103   virginica  versicolor\n",
      "71   versicolor  versicolor\n",
      "61   versicolor   virginica\n",
      "46       setosa      setosa\n",
      "12       setosa   virginica\n",
      "52   versicolor   virginica\n",
      "27       setosa      setosa\n",
      "34       setosa   virginica\n",
      "54   versicolor  versicolor\n",
      "118   virginica  versicolor\n",
      "117   virginica      setosa\n",
      "121   virginica  versicolor\n",
      "6        setosa      setosa\n",
      "111   virginica  versicolor\n",
      "18       setosa      setosa\n",
      "38       setosa   virginica\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica  versicolor\n",
      "------------^^ Sepal Width ^^-----------------------\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'virginica' 'virginica'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica   virginica\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor   virginica\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica   virginica\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica  versicolor\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor   virginica\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "------------^^ Petal Length ^^-----------------------\n",
      "\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "         actual  prediction\n",
      "4        setosa      setosa\n",
      "116   virginica   virginica\n",
      "2        setosa      setosa\n",
      "23       setosa      setosa\n",
      "123   virginica   virginica\n",
      "96   versicolor  versicolor\n",
      "134   virginica  versicolor\n",
      "39       setosa      setosa\n",
      "137   virginica   virginica\n",
      "53   versicolor  versicolor\n",
      "127   virginica   virginica\n",
      "81   versicolor  versicolor\n",
      "115   virginica   virginica\n",
      "135   virginica   virginica\n",
      "74   versicolor  versicolor\n",
      "119   virginica  versicolor\n",
      "105   virginica   virginica\n",
      "51   versicolor  versicolor\n",
      "92   versicolor  versicolor\n",
      "32       setosa      setosa\n",
      "37       setosa      setosa\n",
      "120   virginica   virginica\n",
      "44       setosa      setosa\n",
      "0        setosa      setosa\n",
      "55   versicolor  versicolor\n",
      "72   versicolor  versicolor\n",
      "87   versicolor  versicolor\n",
      "102   virginica   virginica\n",
      "30       setosa      setosa\n",
      "93   versicolor  versicolor\n",
      "45       setosa      setosa\n",
      "59   versicolor  versicolor\n",
      "16       setosa      setosa\n",
      "13       setosa      setosa\n",
      "133   virginica  versicolor\n",
      "128   virginica   virginica\n",
      "64   versicolor  versicolor\n",
      "146   virginica   virginica\n",
      "95   versicolor  versicolor\n",
      "49       setosa      setosa\n",
      "17       setosa      setosa\n",
      "103   virginica   virginica\n",
      "71   versicolor  versicolor\n",
      "61   versicolor  versicolor\n",
      "46       setosa      setosa\n",
      "12       setosa      setosa\n",
      "52   versicolor  versicolor\n",
      "27       setosa      setosa\n",
      "34       setosa      setosa\n",
      "54   versicolor  versicolor\n",
      "118   virginica   virginica\n",
      "117   virginica   virginica\n",
      "121   virginica   virginica\n",
      "6        setosa      setosa\n",
      "111   virginica   virginica\n",
      "18       setosa      setosa\n",
      "38       setosa      setosa\n",
      "20       setosa      setosa\n",
      "58   versicolor  versicolor\n",
      "108   virginica   virginica\n",
      "------------^^ Petal Width ^^-----------------------\n",
      "\n",
      "{'Sepal Length': 0.7166666666666667, 'Sepal Width': 0.5666666666666667, 'Petal Length': 0.9333333333333333, 'Petal Width': 0.95}\n",
      "1at best feature = Petal Width, 2nd best feature = Petal Length\n",
      "------------^^ Final Results ^^-----------------------\n",
      "\n"
     ]
    }
   ],
   "source": [
    "#------ Prediction on Sepal Length ---------\n",
    "feature_cols = ['sepal_length']\n",
    "features = iris_df[feature_cols]\n",
    "species = iris_df['species']\n",
    "\n",
    "features_train, features_test, y_train, y_test = train_test_split(features, species, test_size = 0.4, random_state = 6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(features_train, y_train)\n",
    "\n",
    "y_predict = knn.predict(features_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "\n",
    "accuracySepalLength = accuracy_score(y_test, y_predict)\n",
    "    \n",
    "#print(accuracySepalLength)\n",
    "print(results)\n",
    "print('------------^^ Sepal Length ^^-----------------------\\n')\n",
    "\n",
    "#------ Prediction on Sepal Width ---------\n",
    "feature_cols = ['sepal_width']\n",
    "features = iris_df[feature_cols]\n",
    "\n",
    "#print(X)\n",
    "y = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(features, species, test_size = 0.4, random_state = 6)\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "    \n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "#Results\n",
    "results = pd.DataFrame()   \n",
    "results['actual'] = y_test \n",
    "results['prediction'] = y_predict\n",
    "    \n",
    "accuracySepalWidth = accuracy_score(y_test, y_predict)\n",
    "print(results)\n",
    "print('------------^^ Sepal Width ^^-----------------------\\n')\n",
    "    \n",
    "#------ Prediction on Petal Length ---------\n",
    "feature_cols = ['petal_length']\n",
    "features = iris_df[feature_cols]\n",
    "\n",
    "#print(X)\n",
    "species = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(features, species, test_size=0.4, random_state=6)\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "    \n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "    \n",
    "results = pd.DataFrame()\n",
    "    \n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "    \n",
    "accuracyPetalLength = accuracy_score(y_test, y_predict)\n",
    "print(results)\n",
    "print('------------^^ Petal Length ^^-----------------------\\n')\n",
    "    \n",
    "#------ Prediction on Petal Width ---------\n",
    "feature_cols = ['petal_width']\n",
    "features = iris_df[feature_cols]\n",
    "\n",
    "#print(X)\n",
    "species = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(features, species, test_size=0.4, random_state=6)\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "    \n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "results = pd.DataFrame()    \n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "    \n",
    "accuracyPetalWidth = accuracy_score(y_test, y_predict)\n",
    "print(results)\n",
    "print('------------^^ Petal Width ^^-----------------------\\n')\n",
    "\n",
    "listOfResults = {'Sepal Length':accuracySepalLength,'Sepal Width':accuracySepalWidth, 'Petal Length': accuracyPetalLength, 'Petal Width':accuracyPetalWidth}\n",
    "print(listOfResults)\n",
    "print('1at best feature = Petal Width, 2nd best feature = Petal Length')\n",
    "print('------------^^ Final Results ^^-----------------------\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Questions 2F: Now, we want to repeat part (e), this time using two features. you have to train, test, and evaluate your model for 6 different cases: using (1st and 2nd features), (1st and 3rd features), (1st and 4th  features), (2nd  and 3rd  features), (2nd and 4th features), (3rd and 4th  features)!    \n",
    "Which “feature pair” provides the best accuracy?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'versicolor' 'versicolor'\n",
      " 'virginica' 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'versicolor'\n",
      " 'virginica' 'versicolor' 'virginica' 'setosa' 'versicolor' 'setosa'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'virginica' 'versicolor'\n",
      " 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'virginica'\n",
      " 'virginica' 'virginica' 'versicolor' 'setosa' 'virginica' 'setosa'\n",
      " 'setosa' 'setosa' 'virginica' 'virginica']\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'virginica' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa' 'versicolor'\n",
      " 'virginica' 'versicolor' 'virginica' 'setosa' 'versicolor' 'setosa'\n",
      " 'versicolor' 'setosa' 'setosa' 'virginica' 'virginica' 'versicolor'\n",
      " 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa' 'virginica'\n",
      " 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "\n",
      "\n",
      "0.9833333333333333\n",
      "     sepal_length  petal_width\n",
      "0             5.1          0.2\n",
      "1             4.9          0.2\n",
      "2             4.7          0.2\n",
      "3             4.6          0.2\n",
      "4             5.0          0.2\n",
      "..            ...          ...\n",
      "145           6.7          2.3\n",
      "146           6.3          1.9\n",
      "147           6.5          2.0\n",
      "148           6.2          2.3\n",
      "149           5.9          1.8\n",
      "\n",
      "[150 rows x 2 columns]\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "0.95\n",
      "     sepal_width  petal_length\n",
      "0            3.5           1.4\n",
      "1            3.0           1.4\n",
      "2            3.2           1.3\n",
      "3            3.1           1.5\n",
      "4            3.6           1.4\n",
      "..           ...           ...\n",
      "145          3.0           5.2\n",
      "146          2.5           5.0\n",
      "147          3.0           5.2\n",
      "148          3.4           5.4\n",
      "149          3.0           5.1\n",
      "\n",
      "[150 rows x 2 columns]\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'versicolor' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'virginica' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'virginica' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "0.95\n",
      "     sepal_width  petal_width\n",
      "0            3.5          0.2\n",
      "1            3.0          0.2\n",
      "2            3.2          0.2\n",
      "3            3.1          0.2\n",
      "4            3.6          0.2\n",
      "..           ...          ...\n",
      "145          3.0          2.3\n",
      "146          2.5          1.9\n",
      "147          3.0          2.0\n",
      "148          3.4          2.3\n",
      "149          3.0          1.8\n",
      "\n",
      "[150 rows x 2 columns]\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'versicolor' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "0.95\n",
      "     petal_length  petal_width\n",
      "0             1.4          0.2\n",
      "1             1.4          0.2\n",
      "2             1.3          0.2\n",
      "3             1.5          0.2\n",
      "4             1.4          0.2\n",
      "..            ...          ...\n",
      "145           5.2          2.3\n",
      "146           5.0          1.9\n",
      "147           5.2          2.0\n",
      "148           5.4          2.3\n",
      "149           5.1          1.8\n",
      "\n",
      "[150 rows x 2 columns]\n",
      "['setosa' 'virginica' 'setosa' 'setosa' 'virginica' 'versicolor'\n",
      " 'virginica' 'setosa' 'virginica' 'versicolor' 'virginica' 'versicolor'\n",
      " 'virginica' 'virginica' 'versicolor' 'versicolor' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'virginica' 'setosa' 'setosa'\n",
      " 'versicolor' 'versicolor' 'versicolor' 'virginica' 'setosa' 'versicolor'\n",
      " 'setosa' 'versicolor' 'setosa' 'setosa' 'versicolor' 'virginica'\n",
      " 'versicolor' 'virginica' 'versicolor' 'setosa' 'setosa' 'virginica'\n",
      " 'versicolor' 'versicolor' 'setosa' 'setosa' 'versicolor' 'setosa'\n",
      " 'setosa' 'versicolor' 'virginica' 'virginica' 'virginica' 'setosa'\n",
      " 'virginica' 'setosa' 'setosa' 'setosa' 'versicolor' 'virginica']\n",
      "0.9666666666666667\n",
      "{'SepalLength / SepalWidth': 0.8166666666666667, 'SepalLength / PetalLength': 0.9833333333333333, 'SepalLength / PetalWidth': 0.95, 'SepalWidth / PetalLength': 0.95, 'SepalWidth / PetalWidth': 0.95, 'PetalLength / PetalWidth': 0.9666666666666667}\n",
      "\n",
      "\n",
      "The best feature pair: Sepal Length & Petal Length with accuracy of 0.983\n"
     ]
    }
   ],
   "source": [
    "#----- Prediction on Sepal Length/Speal Width -------\n",
    "feature_cols = ['sepal_length', 'sepal_width']\n",
    "X = iris_df[feature_cols]\n",
    "y = iris_df['species']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.4, random_state=6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "\n",
    "accuracy1 = accuracy_score(y_test, y_predict)\n",
    "\n",
    "#----- Prediction on Sepal Length/SPetal Length -------\n",
    "feature_cols = ['sepal_length', 'petal_length']\n",
    "X = iris_df[feature_cols]\n",
    "y = iris_df['species']\n",
    "\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\\\n",
    "\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "print('\\n')\n",
    "\n",
    "#Results\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test \n",
    "results['prediction'] = y_predict\n",
    "\n",
    "accuracy2 = accuracy_score(y_test, y_predict)\n",
    "print(accuracy2)\n",
    "\n",
    "feature_cols = ['sepal_length', 'petal_width']\n",
    "X = iris_df[feature_cols]\n",
    "print(X)\n",
    "\n",
    "y = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "\n",
    "accuracy3 = accuracy_score(y_test, y_predict)\n",
    "print(accuracy3)\n",
    "\n",
    "feature_cols = ['sepal_width', 'petal_length']\n",
    "X = iris_df[feature_cols]\n",
    "print(X)\n",
    "\n",
    "y = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors=k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "\n",
    "accuracy4 = accuracy_score(y_test, y_predict)\n",
    "print(accuracy4)\n",
    "\n",
    "feature_cols = ['sepal_width', 'petal_width']\n",
    "X = iris_df[feature_cols]\n",
    "print(X)\n",
    "\n",
    "y = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "    \n",
    "accuracy5 = accuracy_score(y_test, y_predict)\n",
    "print(accuracy5)\n",
    "\n",
    "feature_cols = ['petal_length', 'petal_width']\n",
    "X = iris_df[feature_cols]\n",
    "print(X)\n",
    "\n",
    "y = iris_df['species']\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.4, random_state = 6)\n",
    "k = 3\n",
    "knn = KNeighborsClassifier(n_neighbors = k)\n",
    "knn.fit(X_train, y_train)\n",
    "y_predict = knn.predict(X_test)\n",
    "print(y_predict)\n",
    "\n",
    "results = pd.DataFrame()\n",
    "results['actual'] = y_test\n",
    "results['prediction'] = y_predict\n",
    "accuracy6 = accuracy_score(y_test, y_predict)\n",
    "print(accuracy6)\n",
    "\n",
    "listOfResults2 = {'SepalLength / SepalWidth':accuracy1,'SepalLength / PetalLength':accuracy2, 'SepalLength / PetalWidth': accuracy3, 'SepalWidth / PetalLength':accuracy4, 'SepalWidth / PetalWidth':accuracy5, 'PetalLength / PetalWidth':accuracy6}\n",
    "print(listOfResults2)\n",
    "print('\\n')\n",
    "print('The best feature pair: Sepal Length & Petal Length with accuracy of 0.983')\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Question 2G: Does the “best feature pair” from part (f) contain of both “first best feature” and “second best feature” from part (e)? In other word, can we conclude that the “best two features” for classification are the first best feature along with the second best feature together?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Answer: \n",
    "    The best feature pair is Sepal Length & Petal Length so the claim is incorrect based on the answer from F.\n",
    "    The best feature from question E was Petal Width & the second was Petal Length."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.3"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
